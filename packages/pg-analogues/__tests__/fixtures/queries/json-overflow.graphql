# Tests passing more than 100 values to json_build_object
query {
  allPeople(first: 1) {
    nodes {
      id
      a1: postsByAuthorId(first: 1) { totalCount }
      a2: postsByAuthorId(first: 2) { totalCount }
      a3: postsByAuthorId(first: 3) { totalCount }
      a4: postsByAuthorId(first: 4) { totalCount }
      a5: postsByAuthorId(first: 5) { totalCount }
      a6: postsByAuthorId(first: 6) { totalCount }
      a7: postsByAuthorId(first: 7) { totalCount }
      a8: postsByAuthorId(first: 8) { totalCount }
      a9: postsByAuthorId(first: 9) { totalCount }
      a10: postsByAuthorId(first: 10) { totalCount }
      a11: postsByAuthorId(first: 11) { totalCount }
      a12: postsByAuthorId(first: 12) { totalCount }
      a13: postsByAuthorId(first: 13) { totalCount }
      a14: postsByAuthorId(first: 14) { totalCount }
      a15: postsByAuthorId(first: 15) { totalCount }
      a16: postsByAuthorId(first: 16) { totalCount }
      a17: postsByAuthorId(first: 17) { totalCount }
      a18: postsByAuthorId(first: 18) { totalCount }
      a19: postsByAuthorId(first: 19) { totalCount }
      a20: postsByAuthorId(first: 20) { totalCount }
      a21: postsByAuthorId(first: 21) { totalCount }
      a22: postsByAuthorId(first: 22) { totalCount }
      a23: postsByAuthorId(first: 23) { totalCount }
      a24: postsByAuthorId(first: 24) { totalCount }
      a25: postsByAuthorId(first: 25) { totalCount }
      a26: postsByAuthorId(first: 26) { totalCount }
      a27: postsByAuthorId(first: 27) { totalCount }
      a28: postsByAuthorId(first: 28) { totalCount }
      a29: postsByAuthorId(first: 29) { totalCount }
      a30: postsByAuthorId(first: 30) { totalCount }
      a31: postsByAuthorId(first: 31) { totalCount }
      a32: postsByAuthorId(first: 32) { totalCount }
      a33: postsByAuthorId(first: 33) { totalCount }
      a34: postsByAuthorId(first: 34) { totalCount }
      a35: postsByAuthorId(first: 35) { totalCount }
      a36: postsByAuthorId(first: 36) { totalCount }
      a37: postsByAuthorId(first: 37) { totalCount }
      a38: postsByAuthorId(first: 38) { totalCount }
      a39: postsByAuthorId(first: 39) { totalCount }
      a40: postsByAuthorId(first: 40) { totalCount }
      a41: postsByAuthorId(first: 41) { totalCount }
      a42: postsByAuthorId(first: 42) { totalCount }
      a43: postsByAuthorId(first: 43) { totalCount }
      a44: postsByAuthorId(first: 44) { totalCount }
      a45: postsByAuthorId(first: 45) { totalCount }
      a46: postsByAuthorId(first: 46) { totalCount }
      a47: postsByAuthorId(first: 47) { totalCount }
      a48: postsByAuthorId(first: 48) { totalCount }
      a49: postsByAuthorId(first: 49) { totalCount }
      a50: postsByAuthorId(first: 50) { totalCount }
      a51: postsByAuthorId(first: 51) { totalCount }
      a52: postsByAuthorId(first: 52) { totalCount }
      a53: postsByAuthorId(first: 53) { totalCount }
      a54: postsByAuthorId(first: 54) { totalCount }
      a55: postsByAuthorId(first: 55) { totalCount }
      a56: postsByAuthorId(first: 56) { totalCount }
      a57: postsByAuthorId(first: 57) { totalCount }
      a58: postsByAuthorId(first: 58) { totalCount }
      a59: postsByAuthorId(first: 59) { totalCount }
      a60: postsByAuthorId(first: 60) { totalCount }
      a61: postsByAuthorId(first: 61) { totalCount }
      a62: postsByAuthorId(first: 62) { totalCount }
      a63: postsByAuthorId(first: 63) { totalCount }
      a64: postsByAuthorId(first: 64) { totalCount }
      a65: postsByAuthorId(first: 65) { totalCount }
      a66: postsByAuthorId(first: 66) { totalCount }
      a67: postsByAuthorId(first: 67) { totalCount }
      a68: postsByAuthorId(first: 68) { totalCount }
      a69: postsByAuthorId(first: 69) { totalCount }
      a70: postsByAuthorId(first: 70) { totalCount }
      a71: postsByAuthorId(first: 71) { totalCount }
      a72: postsByAuthorId(first: 72) { totalCount }
      a73: postsByAuthorId(first: 73) { totalCount }
      a74: postsByAuthorId(first: 74) { totalCount }
      a75: postsByAuthorId(first: 75) { totalCount }
      a76: postsByAuthorId(first: 76) { totalCount }
      a77: postsByAuthorId(first: 77) { totalCount }
      a78: postsByAuthorId(first: 78) { totalCount }
      a79: postsByAuthorId(first: 79) { totalCount }
      a80: postsByAuthorId(first: 80) { totalCount }
      a81: postsByAuthorId(first: 81) { totalCount }
      a82: postsByAuthorId(first: 82) { totalCount }
      a83: postsByAuthorId(first: 83) { totalCount }
      a84: postsByAuthorId(first: 84) { totalCount }
      a85: postsByAuthorId(first: 85) { totalCount }
      a86: postsByAuthorId(first: 86) { totalCount }
      a87: postsByAuthorId(first: 87) { totalCount }
      a88: postsByAuthorId(first: 88) { totalCount }
      a89: postsByAuthorId(first: 89) { totalCount }
      a90: postsByAuthorId(first: 90) { totalCount }
      a91: postsByAuthorId(first: 91) { totalCount }
      a92: postsByAuthorId(first: 92) { totalCount }
      a93: postsByAuthorId(first: 93) { totalCount }
      a94: postsByAuthorId(first: 94) { totalCount }
      a95: postsByAuthorId(first: 95) { totalCount }
      a96: postsByAuthorId(first: 96) { totalCount }
      a97: postsByAuthorId(first: 97) { totalCount }
      a98: postsByAuthorId(first: 98) { totalCount }
      a99: postsByAuthorId(first: 99) { totalCount }
      a100: postsByAuthorId(first: 100) { totalCount }
      a101: postsByAuthorId(first: 101) { totalCount }
      a102: postsByAuthorId(first: 102) { totalCount }
      a103: postsByAuthorId(first: 103) { totalCount }
    }
  }
}
