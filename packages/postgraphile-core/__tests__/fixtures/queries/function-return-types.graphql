{
  funcInInout(i: 10, ino: 5)
  funcInOut(i: 10)
  funcOut
  funcOutComplex(a: 1, b: "test") {
    x
    y {
      a
      b
      c
    }
    z {
      nodeId
      id
      name
      postsByAuthorId {
        nodes {
          nodeId
          id
        }
      }
    }
  }
  funcOutComplexSetof(a: 1, b: "test") {
    nodes {
      x
      y {
        a
        b
        c
      }
      z {
        nodeId
        id
        name
        postsByAuthorId {
          nodes {
            nodeId
            id
          }
        }
      }
    }
  }
  funcOutOut {
    firstOut
    secondOut
  }
  funcOutOutCompoundType(i1: 10) {
    o1
    o2 {
      a
      b
      c
    }
  }
  funcOutOutSetof {
    nodes {
      o1
      o2
    }
  }
  funcOutOutUnnamed {
    arg1
    arg2
  }
  funcOutSetof {
    nodes
  }
  funcOutTable {
    nodeId
    id
  }
  funcOutTableSetof {
    nodes {
      nodeId
      id
    }
  }
  funcOutUnnamed
  funcOutUnnamedOutOutUnnamed {
    arg1
    arg3
    o2
  }
  funcReturnsTableMultiCol(i: 20) {
    nodes {
      col1
      col2
    }
  }
  funcReturnsTableOneCol(i: 20) {
    nodes
  }
  personById(id: 1) {
    nodeId
    id
    name
    computedOut
    computedOutOut {
      o1
      o2
    }
  }
}
